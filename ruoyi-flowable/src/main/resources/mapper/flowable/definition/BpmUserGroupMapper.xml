<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.flowable.mapper.definition.BpmUserGroupMapper">
    <resultMap type="BpmUserGroup" id="BpmUserGroupResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="memberUserIds" column="member_user_ids" />
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectBpmUserGroupVo">
        select id,
               name,
               description,
               member_user_ids,
               status,
               del_flag,
               create_by,
               create_time,
               update_by,
               update_time,
               remark
        from bpm_user_group
    </sql>

    <select id="selectBpmUserGroupList" parameterType="BpmUserGroup" resultMap="BpmUserGroupResult">
        <include refid="selectBpmUserGroupVo"/>
        <where>
            <if test="name != null  and name != ''">
                and name
                like concat('%', #{name}, '%')
            </if>
            <if test="description != null  and description != ''">
                and description =
                #{description}
            </if>
            <if test="memberUserIds != null  and memberUserIds != ''">
                and member_user_ids ={memberUserIds}
            </if>
            <if test="status != null">
                and status =
                #{status}
            </if>
        </where>
    </select>

    <select id="selectBpmUserGroupById" parameterType="Long"
            resultMap="BpmUserGroupResult">
        <include refid="selectBpmUserGroupVo"/>
        where id = #{id}
    </select>

    <insert id="insertBpmUserGroup" parameterType="BpmUserGroup" useGeneratedKeys="true"
            keyProperty="id">
        insert into bpm_user_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">
                name,
            </if>
            <if test="description != null and description != ''">
                description,
            </if>
            <if test="memberUserIds != null and memberUserIds != ''">
                member_user_ids,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">
                #{name},
            </if>
            <if test="description != null and description != ''">
                #{description},
            </if>
            <if test="memberUserIds != null and memberUserIds != ''">
                #{memberUserIds},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="delFlag != null">
                #{delFlag},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
        </trim>
    </insert>

    <update id="updateBpmUserGroup" parameterType="BpmUserGroup">
        update bpm_user_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="memberUserIds != null and memberUserIds != ''">
                member_user_ids = #{memberUserIds},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBpmUserGroupById" parameterType="Long">
        delete from bpm_user_group where id = #{id}
    </delete>

    <delete id="deleteBpmUserGroupByIds" parameterType="String">
        delete from bpm_user_group where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getSimpleList" parameterType="String"
            resultMap="BpmUserGroupResult">
        <include refid="selectBpmUserGroupVo"/>
        <where>
            status = '0'
            <if test="keywords != null and keywords != ''">
                AND name like concat('%', #{keywords}, '%')
            </if>
        </where>
    </select>

    <select id="selectBatchIds"  resultMap="BpmUserGroupResult">
        <include refid="selectBpmUserGroupVo"/>
        <where>
            id in
            <foreach item="id" collection="list" open="(" separator="," close=")">
                #{id}
            </foreach>
        </where>

    </select>
</mapper>
